import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
df = pd.read_csv('house_prices.csv')
df.head()

print(df.isnull().sum())
print(df.describe())
print(df.dtypes)
sns.histplot(df['Size'], kde=True)
plt.title('Size Distribution')
plt.show()
sns.histplot(df['Price'], kde=True)
plt.title('Price Distribution')
plt.show()

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
df[['Size', 'Number of Rooms']] = scaler.fit_transform(df[['Size', 'Number of Rooms']])
df = pd.get_dummies(df, columns=['Location'], drop_first=True)
plt.figure(figsize=(10, 6))
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.title("Correlation Matrix")
plt.show()

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
X = df.drop('Price', axis=1)
y = df['Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

from sklearn.metrics import mean_squared_error, r2_score
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)
print(f"Root Mean Square Error (RMSE): {rmse:.2f}")
print(f"RÂ² Score: {r2:.2f}")

plt.figure(figsize=(8, 5))
plt.scatter(y_test, y_pred, color='teal')
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'r--')
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Actual vs Predicted House Prices")
plt.grid(True)
plt.show()
